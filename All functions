import sys

#This function will be used as the general menu of our program and i will proceed to othem menus and choices
def main_menu():
    validint = False
    while not validint: # while it is false
        try: 
            print("----------------------------------\n")
            ch = int(input("1. Login\n2. Register\n3. Browse\n4. Exit\nPlease Give Your Choice: "))
        except ValueError: 
            print("Input is not an integer number. Give an integer between 1 and 4.")
        else:
            if (ch < 1) or (ch > 4):
                print("Choice Out of Range. Give an integer between 1 and 4.")
            else: 
                validint = True
    return ch


#____________________________________Owner Function_____________________________________________________________________________________________________________
#this is the owner function. we have a menu for the possible choices of the owner to choose. depending the choice owner takes each number will lead to a different function. Functions wll be used is stock report, 


def owner_menu():
    validint = False
    while not validint: # while it is false
        try: 
            ch = int(input("1. Stock Report\n2. Add Books\n3. Purchase Books\n4. Delete User\n5. Log Off\nPlease Give Your Choice: "))
        except ValueError: 
            print("Input is not an integer number. Give an integer between 1 and 5.")
        else:
            if (ch < 1) or (ch > 5):
                print("Choice Out of Range. Give an integer between 1 and 5.")
            else: 
                validint = True
    return ch


#that function will be used on owner menu function in order to add books on document
def add_book():
    try: 
        f = open("books.txt","a")
    except OSError:
        print("Could not load file")
        sys.exit()
    with f:
        title = input("Title: ")
        author = input("Author: ")
        isbn = input("ISBN: ")
        pages = input("Pages: ")
        copies = int(input("Copies: "))
        price = float(input("Price: "))
        f.write("\n" + title + "," + author + "," + isbn + "," + str(pages) + "," + str(copies) + "," + str(price))
        
   

#that would be used on the owner menu for the stock part and probably on informing the stock on user
def stock_report():
    try: 
        f = open("books.txt","r")
    except OSError:
        print("Could not load file")
        sys.exit()
    with f:
        for line in f.readlines():
            line.strip()
            title,author,isbn,pages,copies,price = line.split(",")   
            print("Title: " + title + "\n" + "Author: " + author + "\n" + "ISBN: " + isbn + "\n" + "Pages: " + pages + "\n" + "Copies: " + copies + "\n" + "Price: $" + price + "\n")


#This function is used for user deletion. Made By Argyris. It is a part of Owner Function
def delete_user():
    with open("pwd.txt", "r") as file:
        lines = file.readlines()
        print("--------List of Usernames------------")
        for line in lines:
            print(line.split(",")[0])
        print("-------------------------------------")
    # Get username to be deleted from the user
    username_to_delete = input("Enter the username to be deleted: ")

    # Check if the username exists in the user database
    if is_username_exists(username_to_delete):
        # Remove the user from the user database
        with open("pwd.txt", "w") as file:
            for line in lines:
                existing_username = line.split(",")[0]
                if existing_username != username_to_delete:
                    file.write(line)

        print(f"User '{username_to_delete}' has been deleted.")
    else:
        print("Username not found. No action taken.")


#_______________________________________________________User Menu______________________________________________________________________________________________________#
# this is a user menu, the second main and general menu and function we will use on our project. Here we have 4 choices, 1 Browse Book, 2 search book, 3 purchase book and 4 exit
# depending the choice of the user, each choice wil lead to a specific other function

def user_menu():
    validint = False
    while not validint: # while it is false
        try: 
            ch = int(input("1. Browse Books\n2. Search Books\n3. Purchase Books\n4. Log Off\nPlease Give Your Choice: "))
        except ValueError: 
            print("Input is not an integer number. Give an integer between 1 and 4.")
        else:
            if (ch < 1) or (ch > 4):
                print("Choice Out of Range. Give an integer between 1 and 4.")
            else: 
                validint = True
    return ch


def purchase_book(search_key):
    try: 
        with open("books.txt", "r") as f:
            data = f.readlines()
    except OSError:
        print("Could not load file")
        sys.exit()

    found = False
    for i, item in enumerate(data): 
        if search_key.lower() in item.lower(): 
            found = True
            title, author, isbn, pages, copies, price = item.strip().split(",")
            updated_line = f"{title},{author},{isbn},{pages},{str(int(copies)-1)},{price}\n"
            data[i] = updated_line
            break

    if not found:
        print("Book not found...")
    else:
        try: 
            with open("books.txt", "w") as f:
                f.writelines(data)
                print("Successful Purchase...")
        except OSError:
            print("Could not write to file")
            sys.exit()
            

#This function will be used on the part of USER MENU main function as the 1st choice of the this user. It prints the book and all the data of the book
def search_books(search_str):
    try: 
        with open("books.txt", "r") as f:
            found = False
            for line in f.readlines():
                if search_str.lower() in line.lower():
                    found = True
                    line = line.strip()
                    title, author, isbn, pages, copies, price = line.split(",")   
                    print("Title: " + title + "\n" + "Author: " + author + "\n" + "ISBN: " + isbn + "\n" + "Pages: " + pages + "\n" + "Copies: " + copies + "\n" + "Price: $" + price + "\n")
            if not found:
                print("Book not found...")

    except OSError:
        print("Could not load file")
        sys.exit()

#____________________________________________Login Function_______________________________________________________________________________________________            
def login(username, password):
    # Open the text file in read mode
    with open('pwd.txt', 'r') as file:
        # Iterate through each line in the file
        for line in file:
            # Split the line into username and password using a comma as the separator
            stored_username, stored_password, stored_credentials = line.strip().split(',')

            # Check if the entered username and password match the stored values
            if username == stored_username and password == stored_password:
                print("-------------------------------------\n")
                print("Login successful!\n")
                print("-------------------------------------")
                return True, stored_credentials

    # If no match is found, print an error message and return False
    print("Incorrect username or password. Please try again.")
    return False,9999
    
#__________________Register Function______________________________________________________________________
def is_username_exists(username):
    # Check if the username already exists in the user database
    with open("pwd.txt", "r") as file:
        lines = file.readlines()
        for line in lines:
            existing_username = line.split(",")[0]
            if existing_username == username:
                return True
    return False

def register_user():
    # Get username and password from the user
    print("----------------------------------\n")
    username = input("Enter a username: ")
    password = input("Enter a password: ")
    print("\n----------------------------------\n")
    exist = is_username_exists(username)
    while exist:
        ch = int(input("Username already exists\n1. Choose a different username\n2. Exit to main menu\nEnter choice: "))
        while ch != 1 and ch != 2: 
            print("Incorrect Choice")
            ch = int(input("1. Choose a different username\n2. Exit to main menu\nEnter choice: "))
        if ch == 1:
            username = input("Enter a username: ")
            password = input("Enter a password: ")
            exist = is_username_exists(username)
            continue
        else:
            return False            
    # Check if the username already exists in the user database
    if not is_username_exists(username):
        # If the username is not in the database, add the new user
        with open("pwd.txt", "a") as file:
            file.write(f"\n{username},{password},{1}")
        print("User registered successfully!")
        print("Welcome, " + username + " (customer)")
        return True
